@inherits ExerciseDetailsBase
@page "/exercise/{ExerciseId:int}"

<PageTitle>@($"{Exercise.ExerciseNumber}. NALOGA")</PageTitle>

<h1 class="text-center">@($"{Exercise.ExerciseNumber}. NALOGA: {Exercise.Title}")</h1>
<NavLink class="btn btn-primary my-3" href="/exercises">&lt;- nazaj na vse naloge</NavLink>
<div style="font-size: 18px">
    <p>@($"LOKACIJA: {Exercise.Location}")</p>
    <p>PRAVILA:</p>
    <div class="">
        @((MarkupString)Exercise.Rules)
    </div>
    <p>@($"REKVIZITI: {Exercise.Props}")</p>
</div>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">

            <div style="overflow-x:auto;">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th scope="col">Mesto uvrstitve</th>
                            <th scope="col">Razred</th>
                            @if (Exercise.NumberOfPlayers > 1)
                            {
                                for (int i = 1; i <= Exercise.NumberOfPlayers; i++)
                                {
                                    <th scope="col">@($"{i}. Dijak")</th>
                                }
                            }
                            <th scope="col">Rezultat</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            List<GameSortModel> sortedGames = new List<GameSortModel>();

                            foreach (var item in Classes)
                            {
                                var gameResult = GameResults.FirstOrDefault(x => x.ClassId == item.Id);

                                sortedGames.Add(new GameSortModel() 
                                    {
                                        ExerciseId = Exercise.Id,
                                        Class = item,
                                        Exercise = Exercise,
                                        GameResult = gameResult
                                    });
                            }

                            sortedGames = GameSortService.SortGames(sortedGames, Exercise.OrderType);

                            foreach (var game in sortedGames)
                            {
                                <tr>
                                    <td>@game.Place</td>
                                    <td>@game.Class.Name</td>
                                    @if (Exercise.NumberOfPlayers > 1)
                                    {
                                        if (game.GameResult != null)
                                        {
                                            var playerResults = game.GameResult.PlayerResults.Split(';').SkipLast(1).ToArray();

                                            foreach (var item in playerResults)
                                            {
                                                <td>@($"{item}")</td>
                                            }
                                        }
                                        else
                                        {
                                            for (var i = 0; i < Exercise.NumberOfPlayers; i++)
                                            {
                                                <td>-</td>
                                            }
                                        }
                                    }
                                    <td>@(game.GameResult != null ? $"{game.GameResult.Result}" : "-")</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</div>
